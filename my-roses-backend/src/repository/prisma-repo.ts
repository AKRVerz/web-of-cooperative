//! Do not edit this file manually, it is generate by `prisma repo generator`

import { PrismaClient, Prisma, User,
 Pembukuan,
 File,
 Mount, } from '@prisma/client';
import _ from 'lodash';

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type AnyRecord = Record<string, any>;

export type BaseOption<Include, Select> = {
  include?: Include;
  select?: Select;
};

export type Find<Select, Include, Cursor, Order, Distinct> = BaseOption<Include, Select> & {
  cursor?: Cursor;
  take?: number;
  skip?: number;
  orderBy?: Prisma.Enumerable<Order>;
  distinct?: Distinct;
};

export type CountArgs<Select, Cursor, Order, Distinct> = Omit<
  Find<Select, never, Cursor, Order, Distinct>,
  'include'
>;

export type Aggregate<Cursor, Order, Distinct> = Omit<
  CountArgs<never, Cursor, Order, Distinct>,
  'select' | 'distinct'
>;

export const prisma = new PrismaClient({
  log: ['error', 'info', 'query', 'warn'],
});

export const models = _.omit(prisma, [
  '$on',
  '$connect',
  '$disconnect',
  '$use',
  '$executeRaw',
  '$executeRawUnsafe',
  '$queryRaw',
  '$queryRawUnsafe',
  '$transaction',
]);

export const MODELS_NAME = {
  USER: 'user',
  PEMBUKUAN: 'pembukuan',
  FILE: 'file',
  MOUNT: 'mount',
} as const;

// eslint-disable-next-line @typescript-eslint/ban-types
export type ModelStructure = {
  user: User;
  pembukuan: Pembukuan;
  file: File;
  mount: Mount;
};

export type ModelName = keyof ModelStructure;

export type ModelScalarFields<T extends keyof ModelStructure> = Prisma.Enumerable<
  keyof ModelStructure[T]
>;

export type ModelDelegate = Prisma.RejectOnNotFound | Prisma.RejectPerOperation | undefined;

export type ModelTypes = {
  user: {
    Where: Prisma.UserWhereInput;
    Select: Prisma.UserSelect;
    Include: unknown;
    Create: Prisma.UserCreateInput | Prisma.UserUncheckedCreateInput;
    Update: Prisma.UserUpdateInput | Prisma.UserUncheckedUpdateInput;
    Cursor: Prisma.UserWhereUniqueInput;
    Order: Prisma.UserOrderByWithRelationInput;
    Delegate: Prisma.UserDelegate<ModelDelegate>;
    GroupBy: Prisma.UserGroupByOutputType;
  },
  pembukuan: {
    Where: Prisma.PembukuanWhereInput;
    Select: Prisma.PembukuanSelect;
    Include: unknown;
    Create: Prisma.PembukuanCreateInput | Prisma.PembukuanUncheckedCreateInput;
    Update: Prisma.PembukuanUpdateInput | Prisma.PembukuanUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.PembukuanOrderByWithRelationInput;
    Delegate: Prisma.PembukuanDelegate<ModelDelegate>;
    GroupBy: Prisma.PembukuanGroupByOutputType;
  },
  file: {
    Where: Prisma.FileWhereInput;
    Select: Prisma.FileSelect;
    Include: unknown;
    Create: Prisma.FileCreateInput | Prisma.FileUncheckedCreateInput;
    Update: Prisma.FileUpdateInput | Prisma.FileUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.FileOrderByWithRelationInput;
    Delegate: Prisma.FileDelegate<ModelDelegate>;
    GroupBy: Prisma.FileGroupByOutputType;
  },
  mount: {
    Where: Prisma.MountWhereInput;
    Select: Prisma.MountSelect;
    Include: Prisma.MountInclude;
    Create: Prisma.MountCreateInput | Prisma.MountUncheckedCreateInput;
    Update: Prisma.MountUpdateInput | Prisma.MountUncheckedUpdateInput;
    Cursor: unknown;
    Order: Prisma.MountOrderByWithRelationInput;
    Delegate: Prisma.MountDelegate<ModelDelegate>;
    GroupBy: Prisma.MountGroupByOutputType;
  },
};
